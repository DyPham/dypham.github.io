{"version":3,"sources":["views/auth-views/components/RegisterForm.js","views/auth-views/authentication/register-1/index.js"],"names":["rules","email","required","message","type","password","confirm","getFieldValue","validator","rule","value","Promise","reject","resolve","mapDispatchToProps","signUp","showAuthMessage","hideAuthMessage","showLoading","connect","auth","loading","showMessage","token","redirect","props","allowRedirect","Form","useForm","form","history","useHistory","useEffect","push","setTimeout","div","initial","opacity","marginBottom","animate","showIcon","layout","name","onFinish","validateFields","then","values","catch","info","console","log","Item","label","hasFeedback","prefix","className","Password","htmlType","block","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","RegisterOne","theme","useSelector","state","currentTheme","style","justify","xs","sm","md","lg","src","alt"],"mappings":"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","file":"static/js/8.b78b8b84.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Alert } from \"antd\";\nimport {\n  signUp,\n  showAuthMessage,\n  showLoading,\n  hideAuthMessage,\n} from \"redux/actions/Auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nconst rules = {\n  email: [\n    {\n      required: true,\n      message: \"Please input your email address\",\n    },\n    {\n      type: \"email\",\n      message: \"Please enter a validate email!\",\n    },\n  ],\n  password: [\n    {\n      required: true,\n      message: \"Please input your password\",\n    },\n  ],\n  confirm: [\n    {\n      required: true,\n      message: \"Please confirm your password!\",\n    },\n    ({ getFieldValue }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue(\"password\") === value) {\n          return Promise.resolve();\n        }\n        return Promise.reject(\"Passwords do not match!\");\n      },\n    }),\n  ],\n};\n\nexport const RegisterForm = (props) => {\n  const {\n    signUp,\n    showLoading,\n    token,\n    loading,\n    redirect,\n    message,\n    showMessage,\n    hideAuthMessage,\n    allowRedirect,\n  } = props;\n  const [form] = Form.useForm();\n  let history = useHistory();\n\n  const onSignUp = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        showLoading();\n        signUp(values);\n      })\n      .catch((info) => {\n        console.log(\"Validate Failed:\", info);\n      });\n  };\n\n  useEffect(() => {\n    if (token !== null && allowRedirect) {\n      history.push(redirect);\n    }\n    if (showMessage) {\n      setTimeout(() => {\n        hideAuthMessage();\n      }, 3000);\n    }\n  });\n\n  return (\n    <>\n      <motion.div\n        initial={{ opacity: 0, marginBottom: 0 }}\n        animate={{\n          opacity: showMessage ? 1 : 0,\n          marginBottom: showMessage ? 20 : 0,\n        }}\n      >\n        <Alert type=\"error\" showIcon message={message}></Alert>\n      </motion.div>\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"register-form\"\n        onFinish={onSignUp}\n      >\n        <Form.Item name=\"email\" label=\"Email\" rules={rules.email} hasFeedback>\n          <Input prefix={<MailOutlined className=\"text-primary\" />} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={rules.password}\n          hasFeedback\n        >\n          <Input.Password prefix={<LockOutlined className=\"text-primary\" />} />\n        </Form.Item>\n        <Form.Item\n          name=\"confirm\"\n          label=\"ConfirmPassword\"\n          rules={rules.confirm}\n          hasFeedback\n        >\n          <Input.Password prefix={<LockOutlined className=\"text-primary\" />} />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\n            Sign Up\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => {\n  const { loading, message, showMessage, token, redirect } = auth;\n  return { loading, message, showMessage, token, redirect };\n};\n\nconst mapDispatchToProps = {\n  signUp,\n  showAuthMessage,\n  hideAuthMessage,\n  showLoading,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\n","import React from \"react\";\nimport RegisterForm from \"../../components/RegisterForm\";\nimport { Card, Row, Col } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nconst backgroundStyle = {\n  backgroundImage: \"url(/img/others/img-17.jpg)\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\n\nconst RegisterOne = (props) => {\n  const theme = useSelector((state) => state.theme.currentTheme);\n  return (\n    <div className=\"h-100\" style={backgroundStyle}>\n      <div className=\"container d-flex flex-column justify-content-center h-100\">\n        <Row justify=\"center\">\n          <Col xs={20} sm={20} md={20} lg={7}>\n            <Card>\n              <div className=\"my-2\">\n                <div className=\"text-center\">\n                  <img\n                    className=\"img-fluid\"\n                    src={`/img/${\n                      theme === \"light\" ? \"logo.png\" : \"logo-white.png\"\n                    }`}\n                    alt=\"\"\n                  />\n                  <p className=\"text-muted\">Create a new account:</p>\n                </div>\n                <Row justify=\"center\">\n                  <Col xs={24} sm={24} md={20} lg={20}>\n                    <RegisterForm {...props} />\n                  </Col>\n                </Row>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterOne;\n"],"sourceRoot":""}